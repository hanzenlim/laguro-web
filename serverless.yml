service: laguro-web
provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  memory: 2880
  timeout: 240
  stage: dev
  environment:
    # These environments are used on the server side.
    REACT_APP_GRAPHQL_LAGURO_API: ${env:REACT_APP_GRAPHQL_LAGURO_API}
    REACT_APP_GRAPHQL_INSURANCE_API: ${env:REACT_APP_GRAPHQL_INSURANCE_API}
    REACT_APP_GRAPHQL_APPOINTMENT_API: ${env:REACT_APP_GRAPHQL_APPOINTMENT_API}
    GRAPHQL_SECRET_KEY: ${env:GRAPHQL_SECRET_KEY}
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}
    COOKIE_KEY: ${env:COOKIE_KEY}
    HELLOSIGN_API_KEY: ${env:HELLOSIGN_API_KEY}
    PRERENDER_TOKEN: ${env:PRERENDER_TOKEN}
    APP_ENV: ${env:APP_ENV}
    SHARED_JWT_SECRET: ${env:SHARED_JWT_SECRET}

iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - acm:ListCertificates
         - apigateway:GET
         - apigateway:DELETE
         - apigateway:POST
         - apigateway:POST
         - cloudfront:UpdateDistribution
         - route53:ListHostedZones
         - route53:ChangeResourceRecordSets
         - route53:GetHostedZone
         - route53:ListResourceRecordSets
       Resource: "*"

functions:
  app:
    handler: serverProd.expressApp
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
      - cors: true


plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager

custom:
  serverless-offline:
    port: 4001
  webpack:
    webpackConfig: ./serverless.webpack.config.js
    includeModules: true
    packager: 'npm'
  customDomain:
    domainName: ${env:DOMAIN_NAME}
    basePath: ''
    stage: ${opt:stage, self:provider.stage}
    createRoute53Record: true
    enabled: true

